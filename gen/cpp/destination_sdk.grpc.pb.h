// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: destination_sdk.proto
#ifndef GRPC_destination_5fsdk_2eproto__INCLUDED
#define GRPC_destination_5fsdk_2eproto__INCLUDED

#include "destination_sdk.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace fivetran_sdk {

// Fivetran (grpc client) <> Destination (grpc server)
class Destination final {
 public:
  static constexpr char const* service_full_name() {
    return "fivetran_sdk.Destination";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status ConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::fivetran_sdk::ConfigurationFormResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::ConfigurationFormResponse>> AsyncConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::ConfigurationFormResponse>>(AsyncConfigurationFormRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::ConfigurationFormResponse>> PrepareAsyncConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::ConfigurationFormResponse>>(PrepareAsyncConfigurationFormRaw(context, request, cq));
    }
    virtual ::grpc::Status Test(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::fivetran_sdk::TestResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TestResponse>> AsyncTest(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TestResponse>>(AsyncTestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TestResponse>> PrepareAsyncTest(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TestResponse>>(PrepareAsyncTestRaw(context, request, cq));
    }
    virtual ::grpc::Status DescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::fivetran_sdk::DescribeTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::DescribeTableResponse>> AsyncDescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::DescribeTableResponse>>(AsyncDescribeTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::DescribeTableResponse>> PrepareAsyncDescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::DescribeTableResponse>>(PrepareAsyncDescribeTableRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::fivetran_sdk::CreateTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::CreateTableResponse>> AsyncCreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::CreateTableResponse>>(AsyncCreateTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::CreateTableResponse>> PrepareAsyncCreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::CreateTableResponse>>(PrepareAsyncCreateTableRaw(context, request, cq));
    }
    virtual ::grpc::Status AlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::fivetran_sdk::AlterTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::AlterTableResponse>> AsyncAlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::AlterTableResponse>>(AsyncAlterTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::AlterTableResponse>> PrepareAsyncAlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::AlterTableResponse>>(PrepareAsyncAlterTableRaw(context, request, cq));
    }
    virtual ::grpc::Status Truncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::fivetran_sdk::TruncateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TruncateResponse>> AsyncTruncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TruncateResponse>>(AsyncTruncateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TruncateResponse>> PrepareAsyncTruncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TruncateResponse>>(PrepareAsyncTruncateRaw(context, request, cq));
    }
    virtual ::grpc::Status WriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::fivetran_sdk::WriteBatchResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::WriteBatchResponse>> AsyncWriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::WriteBatchResponse>>(AsyncWriteBatchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::WriteBatchResponse>> PrepareAsyncWriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::WriteBatchResponse>>(PrepareAsyncWriteBatchRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void ConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest* request, ::fivetran_sdk::ConfigurationFormResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest* request, ::fivetran_sdk::ConfigurationFormResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Test(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest* request, ::fivetran_sdk::TestResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Test(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest* request, ::fivetran_sdk::TestResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest* request, ::fivetran_sdk::DescribeTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest* request, ::fivetran_sdk::DescribeTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest* request, ::fivetran_sdk::CreateTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest* request, ::fivetran_sdk::CreateTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest* request, ::fivetran_sdk::AlterTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest* request, ::fivetran_sdk::AlterTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Truncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest* request, ::fivetran_sdk::TruncateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Truncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest* request, ::fivetran_sdk::TruncateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest* request, ::fivetran_sdk::WriteBatchResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest* request, ::fivetran_sdk::WriteBatchResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::ConfigurationFormResponse>* AsyncConfigurationFormRaw(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::ConfigurationFormResponse>* PrepareAsyncConfigurationFormRaw(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TestResponse>* AsyncTestRaw(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TestResponse>* PrepareAsyncTestRaw(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::DescribeTableResponse>* AsyncDescribeTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::DescribeTableResponse>* PrepareAsyncDescribeTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::CreateTableResponse>* AsyncCreateTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::CreateTableResponse>* PrepareAsyncCreateTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::AlterTableResponse>* AsyncAlterTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::AlterTableResponse>* PrepareAsyncAlterTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TruncateResponse>* AsyncTruncateRaw(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::TruncateResponse>* PrepareAsyncTruncateRaw(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::WriteBatchResponse>* AsyncWriteBatchRaw(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fivetran_sdk::WriteBatchResponse>* PrepareAsyncWriteBatchRaw(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::fivetran_sdk::ConfigurationFormResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::ConfigurationFormResponse>> AsyncConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::ConfigurationFormResponse>>(AsyncConfigurationFormRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::ConfigurationFormResponse>> PrepareAsyncConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::ConfigurationFormResponse>>(PrepareAsyncConfigurationFormRaw(context, request, cq));
    }
    ::grpc::Status Test(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::fivetran_sdk::TestResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TestResponse>> AsyncTest(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TestResponse>>(AsyncTestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TestResponse>> PrepareAsyncTest(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TestResponse>>(PrepareAsyncTestRaw(context, request, cq));
    }
    ::grpc::Status DescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::fivetran_sdk::DescribeTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::DescribeTableResponse>> AsyncDescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::DescribeTableResponse>>(AsyncDescribeTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::DescribeTableResponse>> PrepareAsyncDescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::DescribeTableResponse>>(PrepareAsyncDescribeTableRaw(context, request, cq));
    }
    ::grpc::Status CreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::fivetran_sdk::CreateTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::CreateTableResponse>> AsyncCreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::CreateTableResponse>>(AsyncCreateTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::CreateTableResponse>> PrepareAsyncCreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::CreateTableResponse>>(PrepareAsyncCreateTableRaw(context, request, cq));
    }
    ::grpc::Status AlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::fivetran_sdk::AlterTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::AlterTableResponse>> AsyncAlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::AlterTableResponse>>(AsyncAlterTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::AlterTableResponse>> PrepareAsyncAlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::AlterTableResponse>>(PrepareAsyncAlterTableRaw(context, request, cq));
    }
    ::grpc::Status Truncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::fivetran_sdk::TruncateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TruncateResponse>> AsyncTruncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TruncateResponse>>(AsyncTruncateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TruncateResponse>> PrepareAsyncTruncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TruncateResponse>>(PrepareAsyncTruncateRaw(context, request, cq));
    }
    ::grpc::Status WriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::fivetran_sdk::WriteBatchResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::WriteBatchResponse>> AsyncWriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::WriteBatchResponse>>(AsyncWriteBatchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::WriteBatchResponse>> PrepareAsyncWriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::WriteBatchResponse>>(PrepareAsyncWriteBatchRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest* request, ::fivetran_sdk::ConfigurationFormResponse* response, std::function<void(::grpc::Status)>) override;
      void ConfigurationForm(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest* request, ::fivetran_sdk::ConfigurationFormResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Test(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest* request, ::fivetran_sdk::TestResponse* response, std::function<void(::grpc::Status)>) override;
      void Test(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest* request, ::fivetran_sdk::TestResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest* request, ::fivetran_sdk::DescribeTableResponse* response, std::function<void(::grpc::Status)>) override;
      void DescribeTable(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest* request, ::fivetran_sdk::DescribeTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest* request, ::fivetran_sdk::CreateTableResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateTable(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest* request, ::fivetran_sdk::CreateTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest* request, ::fivetran_sdk::AlterTableResponse* response, std::function<void(::grpc::Status)>) override;
      void AlterTable(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest* request, ::fivetran_sdk::AlterTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Truncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest* request, ::fivetran_sdk::TruncateResponse* response, std::function<void(::grpc::Status)>) override;
      void Truncate(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest* request, ::fivetran_sdk::TruncateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest* request, ::fivetran_sdk::WriteBatchResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteBatch(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest* request, ::fivetran_sdk::WriteBatchResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::ConfigurationFormResponse>* AsyncConfigurationFormRaw(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::ConfigurationFormResponse>* PrepareAsyncConfigurationFormRaw(::grpc::ClientContext* context, const ::fivetran_sdk::ConfigurationFormRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TestResponse>* AsyncTestRaw(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TestResponse>* PrepareAsyncTestRaw(::grpc::ClientContext* context, const ::fivetran_sdk::TestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::DescribeTableResponse>* AsyncDescribeTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::DescribeTableResponse>* PrepareAsyncDescribeTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::DescribeTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::CreateTableResponse>* AsyncCreateTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::CreateTableResponse>* PrepareAsyncCreateTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::CreateTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::AlterTableResponse>* AsyncAlterTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::AlterTableResponse>* PrepareAsyncAlterTableRaw(::grpc::ClientContext* context, const ::fivetran_sdk::AlterTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TruncateResponse>* AsyncTruncateRaw(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::TruncateResponse>* PrepareAsyncTruncateRaw(::grpc::ClientContext* context, const ::fivetran_sdk::TruncateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::WriteBatchResponse>* AsyncWriteBatchRaw(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fivetran_sdk::WriteBatchResponse>* PrepareAsyncWriteBatchRaw(::grpc::ClientContext* context, const ::fivetran_sdk::WriteBatchRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ConfigurationForm_;
    const ::grpc::internal::RpcMethod rpcmethod_Test_;
    const ::grpc::internal::RpcMethod rpcmethod_DescribeTable_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateTable_;
    const ::grpc::internal::RpcMethod rpcmethod_AlterTable_;
    const ::grpc::internal::RpcMethod rpcmethod_Truncate_;
    const ::grpc::internal::RpcMethod rpcmethod_WriteBatch_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status ConfigurationForm(::grpc::ServerContext* context, const ::fivetran_sdk::ConfigurationFormRequest* request, ::fivetran_sdk::ConfigurationFormResponse* response);
    virtual ::grpc::Status Test(::grpc::ServerContext* context, const ::fivetran_sdk::TestRequest* request, ::fivetran_sdk::TestResponse* response);
    virtual ::grpc::Status DescribeTable(::grpc::ServerContext* context, const ::fivetran_sdk::DescribeTableRequest* request, ::fivetran_sdk::DescribeTableResponse* response);
    virtual ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::fivetran_sdk::CreateTableRequest* request, ::fivetran_sdk::CreateTableResponse* response);
    virtual ::grpc::Status AlterTable(::grpc::ServerContext* context, const ::fivetran_sdk::AlterTableRequest* request, ::fivetran_sdk::AlterTableResponse* response);
    virtual ::grpc::Status Truncate(::grpc::ServerContext* context, const ::fivetran_sdk::TruncateRequest* request, ::fivetran_sdk::TruncateResponse* response);
    virtual ::grpc::Status WriteBatch(::grpc::ServerContext* context, const ::fivetran_sdk::WriteBatchRequest* request, ::fivetran_sdk::WriteBatchResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ConfigurationForm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ConfigurationForm() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ConfigurationForm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfigurationForm(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::ConfigurationFormRequest* /*request*/, ::fivetran_sdk::ConfigurationFormResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfigurationForm(::grpc::ServerContext* context, ::fivetran_sdk::ConfigurationFormRequest* request, ::grpc::ServerAsyncResponseWriter< ::fivetran_sdk::ConfigurationFormResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Test : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Test() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Test() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Test(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TestRequest* /*request*/, ::fivetran_sdk::TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTest(::grpc::ServerContext* context, ::fivetran_sdk::TestRequest* request, ::grpc::ServerAsyncResponseWriter< ::fivetran_sdk::TestResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DescribeTable() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::DescribeTableRequest* /*request*/, ::fivetran_sdk::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDescribeTable(::grpc::ServerContext* context, ::fivetran_sdk::DescribeTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::fivetran_sdk::DescribeTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateTable() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::CreateTableRequest* /*request*/, ::fivetran_sdk::CreateTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTable(::grpc::ServerContext* context, ::fivetran_sdk::CreateTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::fivetran_sdk::CreateTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AlterTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AlterTable() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_AlterTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::AlterTableRequest* /*request*/, ::fivetran_sdk::AlterTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAlterTable(::grpc::ServerContext* context, ::fivetran_sdk::AlterTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::fivetran_sdk::AlterTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Truncate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Truncate() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_Truncate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Truncate(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TruncateRequest* /*request*/, ::fivetran_sdk::TruncateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTruncate(::grpc::ServerContext* context, ::fivetran_sdk::TruncateRequest* request, ::grpc::ServerAsyncResponseWriter< ::fivetran_sdk::TruncateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteBatch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteBatch() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_WriteBatch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBatch(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::WriteBatchRequest* /*request*/, ::fivetran_sdk::WriteBatchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteBatch(::grpc::ServerContext* context, ::fivetran_sdk::WriteBatchRequest* request, ::grpc::ServerAsyncResponseWriter< ::fivetran_sdk::WriteBatchResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ConfigurationForm<WithAsyncMethod_Test<WithAsyncMethod_DescribeTable<WithAsyncMethod_CreateTable<WithAsyncMethod_AlterTable<WithAsyncMethod_Truncate<WithAsyncMethod_WriteBatch<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ConfigurationForm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ConfigurationForm() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::ConfigurationFormRequest, ::fivetran_sdk::ConfigurationFormResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::fivetran_sdk::ConfigurationFormRequest* request, ::fivetran_sdk::ConfigurationFormResponse* response) { return this->ConfigurationForm(context, request, response); }));}
    void SetMessageAllocatorFor_ConfigurationForm(
        ::grpc::MessageAllocator< ::fivetran_sdk::ConfigurationFormRequest, ::fivetran_sdk::ConfigurationFormResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::ConfigurationFormRequest, ::fivetran_sdk::ConfigurationFormResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ConfigurationForm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfigurationForm(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::ConfigurationFormRequest* /*request*/, ::fivetran_sdk::ConfigurationFormResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConfigurationForm(
      ::grpc::CallbackServerContext* /*context*/, const ::fivetran_sdk::ConfigurationFormRequest* /*request*/, ::fivetran_sdk::ConfigurationFormResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Test : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Test() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::TestRequest, ::fivetran_sdk::TestResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::fivetran_sdk::TestRequest* request, ::fivetran_sdk::TestResponse* response) { return this->Test(context, request, response); }));}
    void SetMessageAllocatorFor_Test(
        ::grpc::MessageAllocator< ::fivetran_sdk::TestRequest, ::fivetran_sdk::TestResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::TestRequest, ::fivetran_sdk::TestResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Test() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Test(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TestRequest* /*request*/, ::fivetran_sdk::TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Test(
      ::grpc::CallbackServerContext* /*context*/, const ::fivetran_sdk::TestRequest* /*request*/, ::fivetran_sdk::TestResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DescribeTable() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::DescribeTableRequest, ::fivetran_sdk::DescribeTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::fivetran_sdk::DescribeTableRequest* request, ::fivetran_sdk::DescribeTableResponse* response) { return this->DescribeTable(context, request, response); }));}
    void SetMessageAllocatorFor_DescribeTable(
        ::grpc::MessageAllocator< ::fivetran_sdk::DescribeTableRequest, ::fivetran_sdk::DescribeTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::DescribeTableRequest, ::fivetran_sdk::DescribeTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::DescribeTableRequest* /*request*/, ::fivetran_sdk::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DescribeTable(
      ::grpc::CallbackServerContext* /*context*/, const ::fivetran_sdk::DescribeTableRequest* /*request*/, ::fivetran_sdk::DescribeTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateTable() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::CreateTableRequest, ::fivetran_sdk::CreateTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::fivetran_sdk::CreateTableRequest* request, ::fivetran_sdk::CreateTableResponse* response) { return this->CreateTable(context, request, response); }));}
    void SetMessageAllocatorFor_CreateTable(
        ::grpc::MessageAllocator< ::fivetran_sdk::CreateTableRequest, ::fivetran_sdk::CreateTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::CreateTableRequest, ::fivetran_sdk::CreateTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::CreateTableRequest* /*request*/, ::fivetran_sdk::CreateTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateTable(
      ::grpc::CallbackServerContext* /*context*/, const ::fivetran_sdk::CreateTableRequest* /*request*/, ::fivetran_sdk::CreateTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AlterTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AlterTable() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::AlterTableRequest, ::fivetran_sdk::AlterTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::fivetran_sdk::AlterTableRequest* request, ::fivetran_sdk::AlterTableResponse* response) { return this->AlterTable(context, request, response); }));}
    void SetMessageAllocatorFor_AlterTable(
        ::grpc::MessageAllocator< ::fivetran_sdk::AlterTableRequest, ::fivetran_sdk::AlterTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::AlterTableRequest, ::fivetran_sdk::AlterTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AlterTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::AlterTableRequest* /*request*/, ::fivetran_sdk::AlterTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AlterTable(
      ::grpc::CallbackServerContext* /*context*/, const ::fivetran_sdk::AlterTableRequest* /*request*/, ::fivetran_sdk::AlterTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Truncate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Truncate() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::TruncateRequest, ::fivetran_sdk::TruncateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::fivetran_sdk::TruncateRequest* request, ::fivetran_sdk::TruncateResponse* response) { return this->Truncate(context, request, response); }));}
    void SetMessageAllocatorFor_Truncate(
        ::grpc::MessageAllocator< ::fivetran_sdk::TruncateRequest, ::fivetran_sdk::TruncateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::TruncateRequest, ::fivetran_sdk::TruncateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Truncate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Truncate(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TruncateRequest* /*request*/, ::fivetran_sdk::TruncateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Truncate(
      ::grpc::CallbackServerContext* /*context*/, const ::fivetran_sdk::TruncateRequest* /*request*/, ::fivetran_sdk::TruncateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WriteBatch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WriteBatch() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::WriteBatchRequest, ::fivetran_sdk::WriteBatchResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::fivetran_sdk::WriteBatchRequest* request, ::fivetran_sdk::WriteBatchResponse* response) { return this->WriteBatch(context, request, response); }));}
    void SetMessageAllocatorFor_WriteBatch(
        ::grpc::MessageAllocator< ::fivetran_sdk::WriteBatchRequest, ::fivetran_sdk::WriteBatchResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::fivetran_sdk::WriteBatchRequest, ::fivetran_sdk::WriteBatchResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_WriteBatch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBatch(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::WriteBatchRequest* /*request*/, ::fivetran_sdk::WriteBatchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WriteBatch(
      ::grpc::CallbackServerContext* /*context*/, const ::fivetran_sdk::WriteBatchRequest* /*request*/, ::fivetran_sdk::WriteBatchResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ConfigurationForm<WithCallbackMethod_Test<WithCallbackMethod_DescribeTable<WithCallbackMethod_CreateTable<WithCallbackMethod_AlterTable<WithCallbackMethod_Truncate<WithCallbackMethod_WriteBatch<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ConfigurationForm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ConfigurationForm() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ConfigurationForm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfigurationForm(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::ConfigurationFormRequest* /*request*/, ::fivetran_sdk::ConfigurationFormResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Test : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Test() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Test() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Test(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TestRequest* /*request*/, ::fivetran_sdk::TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DescribeTable() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::DescribeTableRequest* /*request*/, ::fivetran_sdk::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateTable() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::CreateTableRequest* /*request*/, ::fivetran_sdk::CreateTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AlterTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AlterTable() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_AlterTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::AlterTableRequest* /*request*/, ::fivetran_sdk::AlterTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Truncate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Truncate() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_Truncate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Truncate(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TruncateRequest* /*request*/, ::fivetran_sdk::TruncateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WriteBatch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteBatch() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_WriteBatch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBatch(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::WriteBatchRequest* /*request*/, ::fivetran_sdk::WriteBatchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ConfigurationForm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ConfigurationForm() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ConfigurationForm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfigurationForm(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::ConfigurationFormRequest* /*request*/, ::fivetran_sdk::ConfigurationFormResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfigurationForm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Test : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Test() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Test() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Test(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TestRequest* /*request*/, ::fivetran_sdk::TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DescribeTable() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::DescribeTableRequest* /*request*/, ::fivetran_sdk::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDescribeTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateTable() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::CreateTableRequest* /*request*/, ::fivetran_sdk::CreateTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AlterTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AlterTable() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_AlterTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::AlterTableRequest* /*request*/, ::fivetran_sdk::AlterTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAlterTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Truncate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Truncate() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_Truncate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Truncate(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TruncateRequest* /*request*/, ::fivetran_sdk::TruncateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTruncate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteBatch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteBatch() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_WriteBatch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBatch(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::WriteBatchRequest* /*request*/, ::fivetran_sdk::WriteBatchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteBatch(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ConfigurationForm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ConfigurationForm() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ConfigurationForm(context, request, response); }));
    }
    ~WithRawCallbackMethod_ConfigurationForm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfigurationForm(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::ConfigurationFormRequest* /*request*/, ::fivetran_sdk::ConfigurationFormResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConfigurationForm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Test : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Test() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Test(context, request, response); }));
    }
    ~WithRawCallbackMethod_Test() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Test(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TestRequest* /*request*/, ::fivetran_sdk::TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Test(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DescribeTable() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DescribeTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::DescribeTableRequest* /*request*/, ::fivetran_sdk::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DescribeTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateTable() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::CreateTableRequest* /*request*/, ::fivetran_sdk::CreateTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AlterTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AlterTable() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AlterTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_AlterTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::AlterTableRequest* /*request*/, ::fivetran_sdk::AlterTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AlterTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Truncate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Truncate() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Truncate(context, request, response); }));
    }
    ~WithRawCallbackMethod_Truncate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Truncate(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TruncateRequest* /*request*/, ::fivetran_sdk::TruncateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Truncate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WriteBatch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WriteBatch() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WriteBatch(context, request, response); }));
    }
    ~WithRawCallbackMethod_WriteBatch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBatch(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::WriteBatchRequest* /*request*/, ::fivetran_sdk::WriteBatchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WriteBatch(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ConfigurationForm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ConfigurationForm() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::fivetran_sdk::ConfigurationFormRequest, ::fivetran_sdk::ConfigurationFormResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::fivetran_sdk::ConfigurationFormRequest, ::fivetran_sdk::ConfigurationFormResponse>* streamer) {
                       return this->StreamedConfigurationForm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ConfigurationForm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ConfigurationForm(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::ConfigurationFormRequest* /*request*/, ::fivetran_sdk::ConfigurationFormResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConfigurationForm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fivetran_sdk::ConfigurationFormRequest,::fivetran_sdk::ConfigurationFormResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Test : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Test() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::fivetran_sdk::TestRequest, ::fivetran_sdk::TestResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::fivetran_sdk::TestRequest, ::fivetran_sdk::TestResponse>* streamer) {
                       return this->StreamedTest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Test() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Test(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TestRequest* /*request*/, ::fivetran_sdk::TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fivetran_sdk::TestRequest,::fivetran_sdk::TestResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DescribeTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DescribeTable() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::fivetran_sdk::DescribeTableRequest, ::fivetran_sdk::DescribeTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::fivetran_sdk::DescribeTableRequest, ::fivetran_sdk::DescribeTableResponse>* streamer) {
                       return this->StreamedDescribeTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DescribeTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DescribeTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::DescribeTableRequest* /*request*/, ::fivetran_sdk::DescribeTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDescribeTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fivetran_sdk::DescribeTableRequest,::fivetran_sdk::DescribeTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateTable() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::fivetran_sdk::CreateTableRequest, ::fivetran_sdk::CreateTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::fivetran_sdk::CreateTableRequest, ::fivetran_sdk::CreateTableResponse>* streamer) {
                       return this->StreamedCreateTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::CreateTableRequest* /*request*/, ::fivetran_sdk::CreateTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fivetran_sdk::CreateTableRequest,::fivetran_sdk::CreateTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AlterTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AlterTable() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::fivetran_sdk::AlterTableRequest, ::fivetran_sdk::AlterTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::fivetran_sdk::AlterTableRequest, ::fivetran_sdk::AlterTableResponse>* streamer) {
                       return this->StreamedAlterTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AlterTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AlterTable(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::AlterTableRequest* /*request*/, ::fivetran_sdk::AlterTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAlterTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fivetran_sdk::AlterTableRequest,::fivetran_sdk::AlterTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Truncate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Truncate() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::fivetran_sdk::TruncateRequest, ::fivetran_sdk::TruncateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::fivetran_sdk::TruncateRequest, ::fivetran_sdk::TruncateResponse>* streamer) {
                       return this->StreamedTruncate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Truncate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Truncate(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::TruncateRequest* /*request*/, ::fivetran_sdk::TruncateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTruncate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fivetran_sdk::TruncateRequest,::fivetran_sdk::TruncateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WriteBatch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WriteBatch() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::fivetran_sdk::WriteBatchRequest, ::fivetran_sdk::WriteBatchResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::fivetran_sdk::WriteBatchRequest, ::fivetran_sdk::WriteBatchResponse>* streamer) {
                       return this->StreamedWriteBatch(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WriteBatch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WriteBatch(::grpc::ServerContext* /*context*/, const ::fivetran_sdk::WriteBatchRequest* /*request*/, ::fivetran_sdk::WriteBatchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWriteBatch(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fivetran_sdk::WriteBatchRequest,::fivetran_sdk::WriteBatchResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ConfigurationForm<WithStreamedUnaryMethod_Test<WithStreamedUnaryMethod_DescribeTable<WithStreamedUnaryMethod_CreateTable<WithStreamedUnaryMethod_AlterTable<WithStreamedUnaryMethod_Truncate<WithStreamedUnaryMethod_WriteBatch<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ConfigurationForm<WithStreamedUnaryMethod_Test<WithStreamedUnaryMethod_DescribeTable<WithStreamedUnaryMethod_CreateTable<WithStreamedUnaryMethod_AlterTable<WithStreamedUnaryMethod_Truncate<WithStreamedUnaryMethod_WriteBatch<Service > > > > > > > StreamedService;
};

}  // namespace fivetran_sdk


#endif  // GRPC_destination_5fsdk_2eproto__INCLUDED
